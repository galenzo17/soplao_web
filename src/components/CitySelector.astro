---
// CitySelector component for Santiago/Pucón selection
---

<div class="city-selector">
  <div class="selector-label">
    <span class="label-text">Ciudad:</span>
  </div>
  <div class="selector-tabs">
    <button 
      id="santiago-tab" 
      class="city-tab active" 
      data-city="santiago"
      aria-label="Seleccionar Santiago"
    >
      Santiago
    </button>
    <button 
      id="pucon-tab" 
      class="city-tab" 
      data-city="pucon"
      aria-label="Seleccionar Pucón"
    >
      Pucón
    </button>
  </div>
</div>

<script>
  // Simple city selector without imports
  let currentCity = 'santiago'; // Default city

  // Load from localStorage
  function loadCurrentCity() {
    const stored = localStorage.getItem('selected-city');
    if (stored && (stored === 'santiago' || stored === 'pucon')) {
      currentCity = stored;
    }
    return currentCity;
  }

  // Save to localStorage
  function saveCurrentCity(city) {
    currentCity = city;
    localStorage.setItem('selected-city', city);
  }

  // Update UI
  function updateUI() {
    const tabs = document.querySelectorAll('.city-tab');
    tabs.forEach(tab => {
      const city = tab.dataset.city;
      if (city === currentCity) {
        tab.classList.add('active');
        tab.setAttribute('aria-pressed', 'true');
      } else {
        tab.classList.remove('active');
        tab.setAttribute('aria-pressed', 'false');
      }
    });
  }

  // Dispatch city change event
  function dispatchCityChange() {
    const event = new CustomEvent('citychange', {
      detail: { city: currentCity },
      bubbles: true
    });
    document.dispatchEvent(event);
  }

  // Setup event listeners
  function setupEventListeners() {
    const tabs = document.querySelectorAll('.city-tab');
    tabs.forEach(tab => {
      tab.addEventListener('click', (e) => {
        const city = e.target.dataset.city;
        if (city && (city === 'santiago' || city === 'pucon')) {
          saveCurrentCity(city);
          updateUI();
          dispatchCityChange();
        }
      });
    });
  }

  // Initialize
  function initializeCitySelector() {
    loadCurrentCity();
    setupEventListeners();
    updateUI();
    dispatchCityChange(); // Trigger initial event
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeCitySelector);
  } else {
    initializeCitySelector();
  }
</script>

<style>
  .city-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-left: 1rem;
  }

  .selector-label {
    display: none;
  }

  @media (min-width: 1024px) {
    .selector-label {
      display: block;
    }
  }

  .label-text {
    font-size: 0.875rem;
    color: #6b7280;
    white-space: nowrap;
  }

  .selector-tabs {
    display: flex;
    background-color: #f3f4f6;
    border-radius: 0.5rem;
    padding: 0.125rem;
    gap: 0.125rem;
  }

  .city-tab {
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
    font-weight: 500;
    border: none;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: all 0.2s ease;
    background-color: transparent;
    color: #6b7280;
    white-space: nowrap;
  }

  .city-tab:hover {
    background-color: #e5e7eb;
    color: #374151;
  }

  .city-tab.active {
    background-color: white;
    color: #0facaf;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  .city-tab:focus {
    outline: none;
    ring: 2px;
    ring-color: #0facaf;
    ring-opacity: 0.5;
  }

  /* Mobile responsive adjustments */
  @media (max-width: 640px) {
    .city-selector {
      margin-left: 0.5rem;
    }
    
    .city-tab {
      padding: 0.25rem 0.5rem;
      font-size: 0.75rem;
    }
  }
</style>